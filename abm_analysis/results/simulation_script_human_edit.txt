; NetLogo code

breed [ commuters commuter]

commuters-own [
  archetype  ; "Pragmatic Commuter" or "Environmentally Aware Commuter"
  transport-mode ; "Tram", "Cycling", "Bus", "Driving"
]

to setup
  clear-all
  create-commuters 100 [
    setxy random-xcor random-ycor
    set archetype ifelse-value (random 2 = 0) ["Pragmatic Commuter"] ["Environmentally Aware Commuter"]
    set transport-mode ""
  ]
  show count commuters with [archetype = "Pragmatic Commuter"]
  show count commuters with [archetype = "Environmentally Aware Commuter"]
  reset-ticks
end

to go
  ask commuters [
    choose-transport-mode
    ; Print chosen transportation each day
    print (word archetype " chose " transport-mode)
  ]
  update-plot
  tick
  if ticks = 100 [ 
  stop 
  ]
end

to choose-transport-mode  ; reporter
  let rain? false ; Assume no rain by default
  if random 2 = 0 [ set rain? true ] ; 50% chance of rain

  let chosen-mode ""
  if archetype = "Pragmatic Commuter" [
    ifelse rain? [
      set chosen-mode pick-transport-mode "Pragmatic Commuter" true
    ]  [
      set chosen-mode pick-transport-mode "Pragmatic Commuter" false
    ]
  ]
  if archetype = "Environmentally Aware Commuter" [
    ifelse rain? [
      set chosen-mode pick-transport-mode "Environmentally Aware Commuter" true
    ]  [
      set chosen-mode pick-transport-mode "Environmentally Aware Commuter" false
    ]
  ]
  set transport-mode chosen-mode
end

to-report pick-transport-mode [selected-archetype rain?]
  ; Returns a transport mode based on archetype and rain condition
  let mode ""
  let random-number random-float 1.0

  ; Pragmatic Commuter
  if selected-archetype = "Pragmatic Commuter" [
    ifelse not rain? [
      if random-number < 1.0 [set mode "Driving"]
    ] [
      if random-number < 1.0 [set mode "Driving"]
    ]
  ]

  ; Environmentally Aware Commuter
  if archetype = "Environmentally Aware Commuter" [
    ifelse not rain? [
      if random-number < 1.0 [set mode "Tram"]
    ] [
      if random-number < 1.0 [set mode "Bus"]
    ]
  ]
  report mode
end

to update-plot
  ; Plot graph of chosen transportation each day
  let tram-count count commuters with [transport-mode = "Tram"]
  let cycling-count count commuters with [transport-mode = "Cycling"]
  let bus-count count commuters with [transport-mode = "Bus"]
  let driving-count count commuters with [transport-mode = "Driving"]

  set-current-plot-pen "Tram"
  plotxy ticks tram-count
  
  set-current-plot-pen "Cycling"
  plotxy ticks cycling-count
  
  set-current-plot-pen "Bus"
  plotxy ticks bus-count
  
  set-current-plot-pen "Driving"
  plotxy ticks driving-count
  
  if ticks = 99 [ 
  show tram-count
  show cycling-count
  show bus-count
  show driving-count
  ]
end

