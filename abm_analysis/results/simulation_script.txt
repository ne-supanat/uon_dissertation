globals [
  population-size
  tram-users
  cycling-users
  bus-users
  driving-users
]

turtles-own [
  archetype
]

to setup
  clear-all
  set population-size 100
  set tram-users 0
  set cycling-users 0
  set bus-users 0
  set driving-users 0

  create-turtles population-size [
    setxy random-xcor random-ycor
    ; Randomly assign an archetype
    ifelse random 2 = 0
    [ set archetype "Pragmatic Commuter" ]
    [ set archetype "Environmentally Conscious Commuter" ]
    set color white
  ]
  reset-ticks
end

to go
  tick
  set tram-users 0
  set cycling-users 0
  set bus-users 0
  set driving-users 0

  ask turtles [
    let transport-mode choose-transport-mode
    ifelse transport-mode = "Tram"
    [ set tram-users tram-users + 1 ]
    [ ifelse transport-mode = "Cycling"
      [ set cycling-users cycling-users + 1 ]
      [ ifelse transport-mode = "Bus"
        [ set bus-users bus-users + 1 ]
        [ set driving-users driving-users + 1 ]
      ]
    ]
  ]
  update-visual
  if ticks = 100 [ stop ]
end

to choose-transport-mode  ; reporter
  let mode ""
  let raining? random 2 = 0 ; 50% chance of rain

  ifelse archetype = "Pragmatic Commuter" [
    ifelse raining? [
      set mode "Tram"
    ]
    [
      set mode "Tram"
    ]
  ]
  [
    ifelse archetype = "Environmentally Conscious Commuter" [
      ifelse raining? [
        set mode "Bus"
      ]
      [
        ifelse random-float 1 < 0.5 [set mode "Tram"] [set mode "Cycling"]
      ]
    ]
    [
      set mode "Driving" ; Default case
    ]
  ]
  report mode
end

to update-visual
  set-current-plot "Transportation Usage"

  set-current-plot-pen "Tram"
  plotxy ticks tram-users

  set-current-plot-pen "Cycling"
  plotxy ticks cycling-users

  set-current-plot-pen "Bus"
  plotxy ticks bus-users

  set-current-plot-pen "Driving"
  plotxy ticks driving-users
end
