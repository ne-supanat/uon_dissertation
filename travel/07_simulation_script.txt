turtles-own [
  archetype
  travel-mode
  happy
]

globals [
  total-carbon-emissions
  average-satisfaction
  scenario
]

to setup
  clear-all
  set total-carbon-emissions 0
  set average-satisfaction 0
  set scenario 1 ; Initial scenario

  create-turtles 100 [
    setxy random-xcor random-ycor
    set shape "person"

    ; Randomly assign an archetype
    let archetype-index random 3
    ifelse archetype-index = 0 [
      set color 5
      set archetype "Eco-Conscious Commuter"
    ] [
      ifelse archetype-index = 1 [
        set color 15
        set archetype "Convenience-Driven Commuter"
      ] [
        set color 25
        set archetype "Cost-Sensitive Commuter"
      ]
    ]
    set happy false ; Initialize happiness
  ]
  reset-ticks
end

to go
  tick
  ask turtles [
    commuting
  ]
  update-metrics
  save
  if ticks = 500 [ stop ]
  set scenario scenario + 1
  if scenario > 7 [stop]
end

to commuting
  ; Determine travel mode based on archetype and scenario
  let cycling-prob 0
  let car-prob 0
  let public-transport-prob 0

  ; Scenario 1: Regular workday
  if scenario = 1 [
    if archetype = "Eco-Conscious Commuter" [
      set cycling-prob 0.6
      set car-prob 0.1
      set public-transport-prob 0.3
    ]
    if archetype = "Convenience-Driven Commuter" [
      set cycling-prob 0.1
      set car-prob 0.7
      set public-transport-prob 0.2
    ]
    if archetype = "Cost-Sensitive Commuter" [
      set cycling-prob 0.1
      set car-prob 0.2
      set public-transport-prob 0.7
    ]
  ]

  ; Scenario 2: Improved public transport
  if scenario = 2 [
    if archetype = "Eco-Conscious Commuter" [
      set cycling-prob 0.3
      set car-prob 0.1
      set public-transport-prob 0.6
    ]
    if archetype = "Convenience-Driven Commuter" [
      set cycling-prob 0.1
      set car-prob 0.3
      set public-transport-prob 0.6
    ]
    if archetype = "Cost-Sensitive Commuter" [
      set cycling-prob 0.1
      set car-prob 0.1
      set public-transport-prob 0.8
    ]
  ]

  ; Scenario 3: Increased parking charges, fuel taxes, car taxes
  if scenario = 3 [
    if archetype = "Eco-Conscious Commuter" [
      set cycling-prob 0.6
      set car-prob 0.1
      set public-transport-prob 0.3
    ]
    if archetype = "Convenience-Driven Commuter" [
      set cycling-prob 0.1
      set car-prob 0.5
      set public-transport-prob 0.4
    ]
    if archetype = "Cost-Sensitive Commuter" [
      set cycling-prob 0.2
      set car-prob 0.3
      set public-transport-prob 0.5
    ]
  ]

    ; Scenario 4: Car restriction policy
  if scenario = 4 [
    if archetype = "Eco-Conscious Commuter" [
      set cycling-prob 0.6
      set car-prob 0.1
      set public-transport-prob 0.3
    ]
    if archetype = "Convenience-Driven Commuter" [
      set cycling-prob 0.1
      set car-prob 0.4
      set public-transport-prob 0.5
    ]
    if archetype = "Cost-Sensitive Commuter" [
      set cycling-prob 0.2
      set car-prob 0.3
      set public-transport-prob 0.5
    ]
  ]

  ; Choose travel mode based on probabilities
  let random-number random-float 1
  if random-number < cycling-prob [
    set travel-mode "cycling"
    set total-carbon-emissions total-carbon-emissions + 1 ;cycling is good, so reduce carbon emission
  ] [
    if random-number < cycling-prob + car-prob [
      set travel-mode "car"
      set total-carbon-emissions total-carbon-emissions + 10 ;car is bad, so increase carbon emission
    ] [
      set travel-mode "public transport"
      set total-carbon-emissions total-carbon-emissions + 5 ;public transport is ok, so medium carbon emission
    ]
  ]

  ; Determine happiness based on policy scenarios
  let happy-prob 0
  let unhappy-prob 0

  ; Scenario 5: Happiness with public transport improvement
  if scenario = 5 [
    if archetype = "Eco-Conscious Commuter" [
      set happy-prob 0.8
      set unhappy-prob 0.2
    ]
    if archetype = "Convenience-Driven Commuter" [
      set happy-prob 0.7
      set unhappy-prob 0.3
    ]
    if archetype = "Cost-Sensitive Commuter" [
      set happy-prob 0.6
      set unhappy-prob 0.4
    ]
  ]

  ; Scenario 6: Happiness with increased parking charges, fuel taxes, car taxes
  if scenario = 6 [
    if archetype = "Eco-Conscious Commuter" [
      set happy-prob 0.6
      set unhappy-prob 0.4
    ]
    if archetype = "Convenience-Driven Commuter" [
      set happy-prob 0.3
      set unhappy-prob 0.7
    ]
    if archetype = "Cost-Sensitive Commuter" [
      set happy-prob 0.1
      set unhappy-prob 0.9
    ]
  ]

  ; Scenario 7: Happiness with car restriction policy
  if scenario = 7 [
    if archetype = "Eco-Conscious Commuter" [
      set happy-prob 0.8
      set unhappy-prob 0.2
    ]
    if archetype = "Convenience-Driven Commuter" [
      set happy-prob 0.3
      set unhappy-prob 0.7
    ]
    if archetype = "Cost-Sensitive Commuter" [
      set happy-prob 0.2
      set unhappy-prob 0.8
    ]
  ]

  ; Set happiness based on probabilities
  if scenario > 4 [
    let happiness-random-number random-float 1
    if happiness-random-number < happy-prob [
      set happy true
    ] [
      set happy false
    ]
  ]
end

to update-metrics
  ; Calculate total carbon emissions
  ; set total-carbon-emissions sum [carbon-footprint] of turtles

  ; Calculate average satisfaction
  let happy-turtles count turtles with [ happy = true ]
  if count turtles > 0 [
    set average-satisfaction ( happy-turtles / count turtles ) * 100
  ] else [
    set average-satisfaction 0
  ]
end

to save
  file-open "outputs.csv"
  if file-exists? "outputs.csv" [
    if file-size "outputs.csv" = 0 [
      file-print [ "tick" "scenario" "total-carbon-emissions" "average-satisfaction" ]
    ]
  ] else [
    file-print [ "tick" "scenario" "total-carbon-emissions" "average-satisfaction" ]
  ]
  file-print (list ticks scenario total-carbon-emissions average-satisfaction)
  file-close
end